name: Hyperion CI Build
on:
  push:
    branches:
      - master

######################
###### Linux #########
######################

jobs:
  Linux:
    name: ${{ matrix.dockerName }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerTag: [ amd64, armv6hf, armv7hf, aarch64 ]
        include:
          - dockerTag: amd64
            dockerName: Debian Stretch (AMD64)
            platform: x11
          - dockerTag: armv6hf
            dockerName: Debian Stretch (Raspberry Pi v1 & ZERO)
            platform: rpi
          - dockerTag: armv7hf
            dockerName: Debian Stretch (Raspberry Pi 2 & 3)
            platform: rpi
          - dockerTag: aarch64
            dockerName: Debian Stretch (Generic AARCH64)
            platform: amlogic

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      # build process
      - name: Build packages
        env:
          DOCKER_TAG: ${{ matrix.dockerTag }}
          DOCKER_NAME: ${{ matrix.dockerName }}
          PLATFORM: ${{ matrix.platform }}
        shell: bash
        run: ./.ci/ci_build.sh

######################
###### macOS #########
######################

  macOS:
    name: macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      # install dependencies
      - name: Install dependencies
        shell: bash
        run: ./.ci/ci_install.sh

      # build process
      - name: Build packages
        env:
          PLATFORM: osx
        shell: bash
        run: ./.ci/ci_build.sh

######################
#### Documentation ###
######################

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install dependencies
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      # Build Docs
      - name: Build docs
        run: |
          npm install -g yarn
          yarn install
          yarn docs:build
